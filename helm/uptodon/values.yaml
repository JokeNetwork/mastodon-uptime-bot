# Default values for uptodon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/frontendnetwork/uptodon
  tag: main
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 1035

env:
  # -- Replace with your Mastodon instance URL
  INSTANCE: "https://mastodon.social"
  # -- Replace with your app name
  APP_NAME: "Your app name"
  # -- Replace with your hashtag
  HASHTAG: "Yourhashtag"
  # -- Replace with your secret
  SECRET: "secret"
  # -- Replace with your up message, hashtag will be in front of it
  UP_MSG: "is up and running again. We apologize for any inconvenience."
  # -- Replace with your down message, hashtag will be in front of it
  DOWN_MSG: "seems to be down. We are already investigating it."
  # -- Replace with your UptimeRobot API key
  UPTIME_ROBOT_API_KEY: "uptimerobotsecret"
  # -- Replace with true if you want to use images
  IMAGE: "false"
  # -- Replace with your up image path if Image is true
  PATH_UP: "img/up.png"
  # -- Replace with your down image path if Image is true
  PATH_DOWN: "img/down.png"
  # -- Replace with true if you want to enable debug mode, this will instantly trigger a down post
  DEBUG: "false"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
